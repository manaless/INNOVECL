{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manal\\\\Pictures\\\\innovecl\\\\innovecl\\\\src\\\\Components\\\\TableNotesFinal.jsx\";\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"element-react\";\nimport axios from \"axios\";\nimport { i18n } from \"element-react\";\nimport locale from \"element-react/src/locale/lang/en\";\nimport \"element-theme-default\";\nimport \"./Table.css\";\nimport { addNotes } from \"../actions/noteActions\";\nimport { addIdeas } from \"../actions/ideaAction\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(locale);\nexport class TableNotesFinal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: false,\n      columns: [{\n        label: \" Idée \",\n        prop: \"idee\",\n        width: 160\n      }],\n      data: [],\n      rowClicked: [],\n      idRow: \"\",\n      ideas: [],\n      count: Math.floor(this.props.ideas.length / 2),\n      eliminated: []\n    };\n    this.getdata = props.getdata;\n  }\n\n  componentDidMount() {\n    window.onload = function () {\n      if (!window.location.hash) {\n        window.location = window.location + \"#loaded\";\n        window.location.reload();\n      }\n    };\n\n    window.onload();\n    let arr = [];\n    let num = 0;\n    this.props.selectedCriteria.forEach((c, indexOne) => {\n      c.forEach((criteria, indexTwo) => {\n        num++;\n        arr.push({\n          label: `Critère 0${indexTwo + 1}`,\n          prop: `critere_0${num}`,\n          width: 160\n        });\n      });\n    });\n    arr.push({\n      label: `Score`,\n      prop: `score`,\n      width: 160\n    });\n    this.setState({ ...this.state,\n      columns: this.state.columns.concat(arr),\n      done: true\n    });\n    axios.get(\"http://localhost/innov_ecl/GetCritere.php\").then(res => {\n      let sortedArr = this.props.notes[2].sort((_ref, _ref2) => {\n        let {\n          score: a\n        } = _ref;\n        let {\n          score: b\n        } = _ref2;\n        return b - a;\n      });\n      sortedArr.forEach((note, index) => {\n        if (index < 10) {\n          const firstStep = this.props.notes[0].filter(n => {\n            return n.id_idee === note.id_idee;\n          });\n          const secondStep = this.props.notes[1].filter(n => {\n            return n.id_idee === note.id_idee;\n          });\n          let data = {};\n          data.idee = note.idee;\n          data.score = parseInt(note === null || note === void 0 ? void 0 : note.score);\n          let cr = 0;\n          this.props.selectedCriteria.forEach((c, index) => {\n            let d = {};\n\n            switch (index) {\n              case 0:\n                d = firstStep[0];\n                break;\n\n              case 1:\n                d = secondStep[0];\n                break;\n\n              case 2:\n                d = note;\n                break;\n\n              default:\n                return;\n            }\n\n            c.forEach((c1, index) => {\n              cr++;\n\n              if (d !== undefined) {\n                data[`critere_0${cr}`] = d[`critere_0${index + 1}`];\n              }\n            });\n          });\n          this.setState({ ...this.state,\n            data: [...this.state.data, data]\n          });\n        }\n      });\n    });\n  }\n\n  onRowClick(row) {\n    this.setState({\n      rowClicked: row\n    }, function () {\n      console.log(this.state.rowClicked);\n    });\n  }\n\n  removeItems(array, itemsToRemove) {\n    return array.filter(v => {\n      return !itemsToRemove.includes(v);\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top 10 id\\xE9es selon le score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContainerTable\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            style: {\n              width: \"100%\"\n            },\n            columns: this.state.columns,\n            data: this.state.data,\n            height: \"400px\",\n            border: true,\n            emptyText: \"Pas de notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            plain: true,\n            onClick: e => {\n              window.location.pathname = \"/TableFinal\";\n            },\n            children: [\"Etape Suivante\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"el-icon-arrow-right el-icon-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedCriteria: state.criteria.selectedCriteria,\n  ideas: state.ideas,\n  notes: state.notes\n});\n\nexport default connect(mapStateToProps, {\n  addNotes,\n  addIdeas\n})(TableNotesFinal);","map":{"version":3,"sources":["C:/Users/manal/Pictures/innovecl/innovecl/src/Components/TableNotesFinal.jsx"],"names":["React","Component","Table","Button","axios","i18n","locale","addNotes","addIdeas","connect","use","TableNotesFinal","constructor","props","state","done","columns","label","prop","width","data","rowClicked","idRow","ideas","count","Math","floor","length","eliminated","getdata","componentDidMount","window","onload","location","hash","reload","arr","num","selectedCriteria","forEach","c","indexOne","criteria","indexTwo","push","setState","concat","get","then","res","sortedArr","notes","sort","score","a","b","note","index","firstStep","filter","n","id_idee","secondStep","idee","parseInt","cr","d","c1","undefined","onRowClick","row","console","log","removeItems","array","itemsToRemove","v","includes","componentWillUnmount","callback","render","e","pathname","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table, Button } from \"element-react\";\r\nimport axios from \"axios\";\r\nimport { i18n } from \"element-react\";\r\nimport locale from \"element-react/src/locale/lang/en\";\r\nimport \"element-theme-default\";\r\nimport \"./Table.css\";\r\nimport { addNotes } from \"../actions/noteActions\";\r\nimport { addIdeas } from \"../actions/ideaAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\ni18n.use(locale);\r\nexport class TableNotesFinal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            done: false,\r\n            columns: [\r\n                {\r\n                    label: \" Idée \",\r\n                    prop: \"idee\",\r\n                    width: 160,\r\n                },\r\n            ],\r\n            data: [],\r\n            rowClicked: [],\r\n            idRow: \"\",\r\n            ideas: [],\r\n            count: Math.floor(this.props.ideas.length / 2),\r\n            eliminated: [],\r\n        };\r\n        this.getdata = props.getdata;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onload = function () {\r\n            if (!window.location.hash) {\r\n                window.location = window.location + \"#loaded\";\r\n                window.location.reload();\r\n            }\r\n        };\r\n        window.onload();\r\n\r\n        let arr = [];\r\n        let num = 0;\r\n        this.props.selectedCriteria.forEach((c, indexOne) => {\r\n            c.forEach((criteria, indexTwo) => {\r\n                num++;\r\n                arr.push({\r\n                    label: `Critère 0${indexTwo + 1}`,\r\n                    prop: `critere_0${num}`,\r\n                    width: 160,\r\n                });\r\n            });\r\n        });\r\n        arr.push({ label: `Score`, prop: `score`, width: 160 });\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            columns: this.state.columns.concat(arr),\r\n            done: true,\r\n        });\r\n\r\n        axios.get(\"http://localhost/innov_ecl/GetCritere.php\").then((res) => {\r\n            let sortedArr = this.props.notes[2].sort(\r\n                ({ score: a }, { score: b }) => b - a\r\n            );\r\n            sortedArr.forEach((note, index) => {\r\n                if (index < 10) {\r\n                    const firstStep = this.props.notes[0].filter((n) => {\r\n                        return n.id_idee === note.id_idee;\r\n                    });\r\n                    const secondStep = this.props.notes[1].filter((n) => {\r\n                        return n.id_idee === note.id_idee;\r\n                    });\r\n                    let data = {};\r\n                    data.idee = note.idee;\r\n                    data.score = parseInt(note?.score);\r\n                    let cr = 0;\r\n                    this.props.selectedCriteria.forEach((c, index) => {\r\n                        let d = {};\r\n                        switch (index) {\r\n                            case 0:\r\n                                d = firstStep[0];\r\n                                break;\r\n                            case 1:\r\n                                d = secondStep[0];\r\n                                break;\r\n                            case 2:\r\n                                d = note;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        c.forEach((c1, index) => {\r\n                            cr++;\r\n                            if (d !== undefined) {\r\n                                data[`critere_0${cr}`] =\r\n                                    d[`critere_0${index + 1}`];\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    this.setState({\r\n                        ...this.state,\r\n                        data: [...this.state.data, data],\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    onRowClick(row) {\r\n        this.setState({ rowClicked: row }, function () {\r\n            console.log(this.state.rowClicked);\r\n        });\r\n    }\r\n    removeItems(array, itemsToRemove) {\r\n        return array.filter((v) => {\r\n            return !itemsToRemove.includes(v);\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <h2>Top 10 idées selon le score</h2>\r\n\r\n                <div className='flex-center'>\r\n                    <div className='ContainerTable'>\r\n                        <Table\r\n                            style={{ width: \"100%\" }}\r\n                            columns={this.state.columns}\r\n                            data={this.state.data}\r\n                            height='400px'\r\n                            border={true}\r\n                            emptyText='Pas de notes'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className='footer'>\r\n                    <Button.Group>\r\n                        <Button\r\n                            type='danger'\r\n                            plain={true}\r\n                            onClick={(e) => {\r\n                                window.location.pathname = \"/TableFinal\";\r\n                            }}\r\n                        >\r\n                            Etape Suivante\r\n                            <i className='el-icon-arrow-right el-icon-right'></i>\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedCriteria: state.criteria.selectedCriteria,\r\n    ideas: state.ideas,\r\n    notes: state.notes,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNotes, addIdeas })(\r\n    TableNotesFinal\r\n);\r\n"]},"metadata":{},"sourceType":"module"}