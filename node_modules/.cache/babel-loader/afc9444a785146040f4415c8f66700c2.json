{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manal\\\\Pictures\\\\innovecl\\\\innovecl\\\\src\\\\Components\\\\TableNotes.jsx\";\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"element-react\";\nimport axios from \"axios\";\nimport { i18n } from \"element-react\";\nimport locale from \"element-react/src/locale/lang/en\";\nimport \"element-theme-default\";\nimport \"./Table.css\";\nimport { addNotes } from \"../actions/noteActions\";\nimport { addIdeas } from \"../actions/ideaAction\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(locale);\nexport class TableNotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        label: \" ID idèe \",\n        prop: \"id_idee\",\n        width: 160\n      }, {\n        label: \" Idée \",\n        prop: \"idee\",\n        width: 160\n      }],\n      data: [],\n      rowClicked: [],\n      idRow: \"\",\n      ideas: [],\n      count: Math.floor(this.props.ideas.length / 2),\n      eliminated: []\n    };\n    this.getdata = props.getdata;\n  }\n\n  componentDidMount() {\n    window.onload = function () {\n      if (!window.location.hash) {\n        window.location = window.location + \"#loaded\";\n        window.location.reload();\n      }\n    };\n\n    window.onload();\n    let arr = [];\n    this.props.selectedCriteria.forEach((c, index) => arr.push({\n      label: `Critère 0${index + 1}`,\n      prop: `critere_0${index + 1}`,\n      width: 160\n    }));\n    arr.push({\n      label: `Score`,\n      prop: `score`,\n      width: 160\n    });\n    this.setState({ ...this.state,\n      columns: this.state.columns.concat(arr)\n    });\n    let notes = [];\n    const fd = new FormData();\n    fd.append(\"id\", this.props.seance.id_seance);\n    axios.post(\"http://localhost/innov_ecl/GetNote.php\", fd).then(res => {\n      notes = res.data;\n      notes.forEach((note, index) => {\n        let idNote = note.id_note;\n        const fd = new FormData();\n        fd.append(\"id\", note.id_idee);\n        axios.post(\"http://localhost/innov_ecl/GetIdeaById.php\", fd).then(res => {\n          const found = this.state.ideas.some(el => el.id_idée === res.data.id_idée);\n\n          if (!found) {\n            let ideeNotes = {};\n            let indexes = [];\n            let score = 1;\n\n            if (this.props.step !== 3) {\n              this.props.notes[Math.abs(this.props.step - 3) - 1].forEach(nt => {\n                if (nt.id_idee === res.data.id_idée) {\n                  score = score * nt.score;\n                }\n              });\n            }\n\n            switch (this.props.selectedCriteria.length) {\n              case 1:\n                this.props.selectedCriteria.forEach(criteria => {\n                  indexes.push(notes.findIndex(note => {\n                    return note.id_critere === criteria.id_criteres && note.id_idee === res.data.id_idée;\n                  }));\n                });\n                ideeNotes = {\n                  critere_01: notes[indexes[0]].note,\n                  score: parseInt(notes[indexes[0]].note) * score\n                };\n                break;\n\n              case 2:\n                this.props.selectedCriteria.forEach(criteria => {\n                  indexes.push(notes.findIndex(note => {\n                    return note.id_critere === criteria.id_criteres && note.id_idee === res.data.id_idée;\n                  }));\n                });\n                ideeNotes = {\n                  critere_01: notes[indexes[0]].note,\n                  critere_02: notes[indexes[1]].note,\n                  score: parseInt(notes[indexes[0]].note) * parseInt(notes[indexes[1]].note) * score\n                };\n                break;\n\n              case 3:\n                this.props.selectedCriteria.forEach(criteria => {\n                  indexes.push(notes.findIndex(note => {\n                    return note.id_critere === criteria.id_criteres && note.id_idee === res.data.id_idée;\n                  }));\n                });\n                ideeNotes = {\n                  critere_01: notes[indexes[0]].note,\n                  critere_02: notes[indexes[1]].note,\n                  critere_03: notes[indexes[2]].note,\n                  score: parseInt(notes[indexes[0]].note) * parseInt(notes[indexes[1]].note) * parseInt(notes[indexes[2]].note) * score\n                };\n                break;\n\n              default:\n                return;\n            }\n\n            this.setState({ ...this.state,\n              ideas: [...this.state.ideas, res.data]\n            });\n            this.setState({ ...this.state,\n              data: [...this.state.data, {\n                id_idee: res.data.id_idée,\n                id_note: idNote,\n                idee: res.data.enonce_idee,\n                ...ideeNotes\n              }],\n              done: true\n            });\n            const step = Math.abs(this.props.step - 3);\n            const data = this.state.data;\n            this.props.addNotes({\n              step,\n              notes: data\n            });\n\n            if (this.props.notes[step].length === this.props.ideas.length) {\n              console.log(\"hi\");\n              let arr = this.props.notes[Math.abs(this.props.step - 3)].sort((a, b) => {\n                return a.score - b.score;\n              });\n              let i = 0;\n              let ind = [];\n\n              for (i; i < this.state.count; i++) {\n                var _arr$i;\n\n                ind.push(i);\n                const fd = new FormData();\n                fd.append(\"id\", (_arr$i = arr[i]) === null || _arr$i === void 0 ? void 0 : _arr$i.id_idee);\n                axios.post(\"http://localhost/innov_ecl/DeleteIdea.php\", fd).then(res => {\n                  axios.post(\"http://localhost/innov_ecl/DeleteNotes.php\");\n                });\n              }\n\n              arr = arr.slice(ind[ind.length - 1] + 1, arr.length);\n              this.props.addNotes({\n                step,\n                notes: arr\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  getdata() {\n    axios.get(\"http://localhost/innov_ecl/GetNote.php\").then(res => {\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  onRowClick(row) {\n    this.setState({\n      rowClicked: row\n    }, function () {\n      console.log(this.state.rowClicked);\n    });\n  }\n\n  removeItems(array, itemsToRemove) {\n    return array.filter(v => {\n      return !itemsToRemove.includes(v);\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [`Les Notes (Phase ${Math.abs(this.props.step - 3) + 1})`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContainerTable\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            style: {\n              width: \"100%\"\n            },\n            columns: this.state.columns,\n            data: this.state.data,\n            height: \"400px\",\n            border: true,\n            emptyText: \"Pas de notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            plain: true,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"el-icon-arrow-left el-icon-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                textDecoration: \"none\"\n              },\n              href: \"/Notation\",\n              children: \"Etape pr\\xE9c\\xE9dente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            plain: true,\n            onClick: e => {\n              if (this.props.step !== 1) {\n                window.location.pathname = \"/TableCriteres\";\n              } else {\n                window.location.pathname = \"/TableNotesFinal\";\n              }\n            },\n            children: [\"Etape Suivante\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"el-icon-arrow-right el-icon-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedCriteria: state.criteria.selectedCriteria[Math.abs(state.steps - 3)],\n  ideas: state.ideas,\n  notes: state.notes,\n  step: state.steps,\n  seance: state.seance.seance\n});\n\nexport default connect(mapStateToProps, {\n  addNotes,\n  addIdeas\n})(TableNotes);","map":{"version":3,"sources":["C:/Users/manal/Pictures/innovecl/innovecl/src/Components/TableNotes.jsx"],"names":["React","Component","Table","Button","axios","i18n","locale","addNotes","addIdeas","connect","use","TableNotes","constructor","props","state","columns","label","prop","width","data","rowClicked","idRow","ideas","count","Math","floor","length","eliminated","getdata","componentDidMount","window","onload","location","hash","reload","arr","selectedCriteria","forEach","c","index","push","setState","concat","notes","fd","FormData","append","seance","id_seance","post","then","res","note","idNote","id_note","id_idee","found","some","el","id_idée","ideeNotes","indexes","score","step","abs","nt","criteria","findIndex","id_critere","id_criteres","critere_01","parseInt","critere_02","critere_03","idee","enonce_idee","done","console","log","sort","a","b","i","ind","slice","get","onRowClick","row","removeItems","array","itemsToRemove","filter","v","includes","componentWillUnmount","callback","render","textDecoration","e","pathname","mapStateToProps","steps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table, Button } from \"element-react\";\r\nimport axios from \"axios\";\r\nimport { i18n } from \"element-react\";\r\nimport locale from \"element-react/src/locale/lang/en\";\r\nimport \"element-theme-default\";\r\nimport \"./Table.css\";\r\nimport { addNotes } from \"../actions/noteActions\";\r\nimport { addIdeas } from \"../actions/ideaAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\ni18n.use(locale);\r\nexport class TableNotes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [\r\n                {\r\n                    label: \" ID idèe \",\r\n                    prop: \"id_idee\",\r\n                    width: 160,\r\n                },\r\n                {\r\n                    label: \" Idée \",\r\n                    prop: \"idee\",\r\n                    width: 160,\r\n                },\r\n            ],\r\n            data: [],\r\n            rowClicked: [],\r\n            idRow: \"\",\r\n            ideas: [],\r\n            count: Math.floor(this.props.ideas.length / 2),\r\n            eliminated: [],\r\n        };\r\n        this.getdata = props.getdata;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onload = function () {\r\n            if (!window.location.hash) {\r\n                window.location = window.location + \"#loaded\";\r\n                window.location.reload();\r\n            }\r\n        };\r\n        window.onload();\r\n\r\n        let arr = [];\r\n        this.props.selectedCriteria.forEach((c, index) =>\r\n            arr.push({\r\n                label: `Critère 0${index + 1}`,\r\n                prop: `critere_0${index + 1}`,\r\n                width: 160,\r\n            })\r\n        );\r\n        arr.push({ label: `Score`, prop: `score`, width: 160 });\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            columns: this.state.columns.concat(arr),\r\n        });\r\n\r\n        let notes = [];\r\n        const fd = new FormData();\r\n        fd.append(\"id\", this.props.seance.id_seance);\r\n        axios.post(\"http://localhost/innov_ecl/GetNote.php\", fd).then((res) => {\r\n            notes = res.data;\r\n            notes.forEach((note, index) => {\r\n                let idNote = note.id_note;\r\n                const fd = new FormData();\r\n                fd.append(\"id\", note.id_idee);\r\n                axios\r\n                    .post(\"http://localhost/innov_ecl/GetIdeaById.php\", fd)\r\n                    .then((res) => {\r\n                        const found = this.state.ideas.some(\r\n                            (el) => el.id_idée === res.data.id_idée\r\n                        );\r\n\r\n                        if (!found) {\r\n                            let ideeNotes = {};\r\n                            let indexes = [];\r\n                            let score = 1;\r\n                            if (this.props.step !== 3) {\r\n                                this.props.notes[\r\n                                    Math.abs(this.props.step - 3) - 1\r\n                                ].forEach((nt) => {\r\n                                    if (nt.id_idee === res.data.id_idée) {\r\n                                        score = score * nt.score;\r\n                                    }\r\n                                });\r\n                            }\r\n                            switch (this.props.selectedCriteria.length) {\r\n                                case 1:\r\n                                    this.props.selectedCriteria.forEach(\r\n                                        (criteria) => {\r\n                                            indexes.push(\r\n                                                notes.findIndex((note) => {\r\n                                                    return (\r\n                                                        note.id_critere ===\r\n                                                            criteria.id_criteres &&\r\n                                                        note.id_idee ===\r\n                                                            res.data.id_idée\r\n                                                    );\r\n                                                })\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    ideeNotes = {\r\n                                        critere_01: notes[indexes[0]].note,\r\n                                        score:\r\n                                            parseInt(notes[indexes[0]].note) *\r\n                                            score,\r\n                                    };\r\n                                    break;\r\n                                case 2:\r\n                                    this.props.selectedCriteria.forEach(\r\n                                        (criteria) => {\r\n                                            indexes.push(\r\n                                                notes.findIndex((note) => {\r\n                                                    return (\r\n                                                        note.id_critere ===\r\n                                                            criteria.id_criteres &&\r\n                                                        note.id_idee ===\r\n                                                            res.data.id_idée\r\n                                                    );\r\n                                                })\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    ideeNotes = {\r\n                                        critere_01: notes[indexes[0]].note,\r\n                                        critere_02: notes[indexes[1]].note,\r\n                                        score:\r\n                                            parseInt(notes[indexes[0]].note) *\r\n                                            parseInt(notes[indexes[1]].note) *\r\n                                            score,\r\n                                    };\r\n                                    break;\r\n                                case 3:\r\n                                    this.props.selectedCriteria.forEach(\r\n                                        (criteria) => {\r\n                                            indexes.push(\r\n                                                notes.findIndex((note) => {\r\n                                                    return (\r\n                                                        note.id_critere ===\r\n                                                            criteria.id_criteres &&\r\n                                                        note.id_idee ===\r\n                                                            res.data.id_idée\r\n                                                    );\r\n                                                })\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                    ideeNotes = {\r\n                                        critere_01: notes[indexes[0]].note,\r\n                                        critere_02: notes[indexes[1]].note,\r\n                                        critere_03: notes[indexes[2]].note,\r\n                                        score:\r\n                                            parseInt(notes[indexes[0]].note) *\r\n                                            parseInt(notes[indexes[1]].note) *\r\n                                            parseInt(notes[indexes[2]].note) *\r\n                                            score,\r\n                                    };\r\n\r\n                                    break;\r\n                                default:\r\n                                    return;\r\n                            }\r\n                            this.setState({\r\n                                ...this.state,\r\n                                ideas: [...this.state.ideas, res.data],\r\n                            });\r\n                            this.setState({\r\n                                ...this.state,\r\n                                data: [\r\n                                    ...this.state.data,\r\n                                    {\r\n                                        id_idee: res.data.id_idée,\r\n                                        id_note: idNote,\r\n                                        idee: res.data.enonce_idee,\r\n                                        ...ideeNotes,\r\n                                    },\r\n                                ],\r\n                                done: true,\r\n                            });\r\n                            const step = Math.abs(this.props.step - 3);\r\n                            const data = this.state.data;\r\n                            this.props.addNotes({\r\n                                step,\r\n                                notes: data,\r\n                            });\r\n\r\n                            if (\r\n                                this.props.notes[step].length ===\r\n                                this.props.ideas.length\r\n                            ) {\r\n                                console.log(\"hi\");\r\n                                let arr = this.props.notes[\r\n                                    Math.abs(this.props.step - 3)\r\n                                ].sort((a, b) => {\r\n                                    return a.score - b.score;\r\n                                });\r\n                                let i = 0;\r\n                                let ind = [];\r\n                                for (i; i < this.state.count; i++) {\r\n                                    ind.push(i);\r\n                                    const fd = new FormData();\r\n                                    fd.append(\"id\", arr[i]?.id_idee);\r\n                                    axios\r\n                                        .post(\r\n                                            \"http://localhost/innov_ecl/DeleteIdea.php\",\r\n                                            fd\r\n                                        )\r\n                                        .then((res) => {\r\n                                            axios.post(\r\n                                                \"http://localhost/innov_ecl/DeleteNotes.php\"\r\n                                            );\r\n                                        });\r\n                                }\r\n                                arr = arr.slice(\r\n                                    ind[ind.length - 1] + 1,\r\n                                    arr.length\r\n                                );\r\n\r\n                                this.props.addNotes({\r\n                                    step,\r\n                                    notes: arr,\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n            });\r\n        });\r\n    }\r\n    getdata() {\r\n        axios.get(\"http://localhost/innov_ecl/GetNote.php\").then((res) => {\r\n            this.setState({ data: res.data });\r\n        });\r\n    }\r\n    onRowClick(row) {\r\n        this.setState({ rowClicked: row }, function () {\r\n            console.log(this.state.rowClicked);\r\n        });\r\n    }\r\n    removeItems(array, itemsToRemove) {\r\n        return array.filter((v) => {\r\n            return !itemsToRemove.includes(v);\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <h2>\r\n                    {`Les Notes (Phase ${Math.abs(this.props.step - 3) + 1})`}{\" \"}\r\n                </h2>\r\n\r\n                <div className='flex-center'>\r\n                    <div className='ContainerTable'>\r\n                        <Table\r\n                            style={{ width: \"100%\" }}\r\n                            columns={this.state.columns}\r\n                            data={this.state.data}\r\n                            height='400px'\r\n                            border={true}\r\n                            emptyText='Pas de notes'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className='footer'>\r\n                    <Button.Group>\r\n                        <Button type='danger' plain={true}>\r\n                            <i className='el-icon-arrow-left el-icon-left'></i>\r\n                            <a\r\n                                style={{ textDecoration: \"none\" }}\r\n                                href='/Notation'\r\n                            >\r\n                                Etape précédente\r\n                            </a>\r\n                        </Button>\r\n                        <Button\r\n                            type='danger'\r\n                            plain={true}\r\n                            onClick={(e) => {\r\n                                if (this.props.step !== 1) {\r\n                                    window.location.pathname = \"/TableCriteres\";\r\n                                } else {\r\n                                    window.location.pathname =\r\n                                        \"/TableNotesFinal\";\r\n                                }\r\n                            }}\r\n                        >\r\n                            Etape Suivante\r\n                            <i className='el-icon-arrow-right el-icon-right'></i>\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedCriteria:\r\n        state.criteria.selectedCriteria[Math.abs(state.steps - 3)],\r\n    ideas: state.ideas,\r\n    notes: state.notes,\r\n    step: state.steps,\r\n    seance: state.seance.seance,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNotes, addIdeas })(TableNotes);\r\n"]},"metadata":{},"sourceType":"module"}