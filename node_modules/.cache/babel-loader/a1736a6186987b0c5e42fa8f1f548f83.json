{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manal\\\\Pictures\\\\innovecl\\\\innovecl\\\\src\\\\Components\\\\Divergence.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Input, Form } from \"element-react\";\nimport { Link } from \"react-router-dom\";\nimport { i18n } from \"element-react\";\nimport locale from \"element-react/src/locale/lang/en\";\nimport \"element-theme-default\";\nimport \"./Table.css\";\nimport { connect } from \"react-redux\";\nimport { addIdeas } from \"../actions/ideaAction\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(locale);\nexport class Divergence extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      i: 0,\n      current: [],\n      ideas: [],\n      form: {\n        enonce_idee: \"\",\n        tags: [{\n          key: 1,\n          value: \"\"\n        }]\n      },\n      visible: true,\n      next: true,\n      rules: {\n        enonce_idee: [{\n          required: true,\n          message: \"Ecrire l'idee\",\n          trigger: \"blur\"\n        }, {\n          validator: (rule, value, callback) => {\n            if (value === \"\") {\n              callback(new Error(\"Idee vide\"));\n            } else {\n              callback();\n            }\n          }\n        }]\n      }\n    };\n  }\n\n  nextQuestion() {\n    this.setState({ ...this.state,\n      i: this.state.i + 1,\n      current: { ...this.props.selectedQuestions[this.state.i + 1]\n      }\n    });\n\n    if (this.state.i === this.props.selectedQuestions.length - 1) {\n      this.setState({ ...this.state,\n        next: false\n      });\n    }\n\n    const ideas = [];\n    this.state.ideas.forEach(idea => {\n      const tags = idea.tags.map(tag => {\n        return tag.value;\n      });\n      const ft = tags.join(\", \");\n      ideas.push({\n        id_question: idea.id_question,\n        enonce_idee: idea.enonce_idee,\n        tags: ft\n      });\n    });\n    this.props.addIdeas(ideas);\n  }\n\n  addIdea() {\n    const fd = new FormData();\n    const tags = this.state.form.tags.map(tag => {\n      return tag.value;\n    });\n    const ft = tags.join(\", \");\n    fd.append(\"id_question\", this.state.current.id_question);\n    fd.append(\"enonce_idee\", this.state.form.enonce_idee);\n    fd.append(\"id_seance\", this.props.seance.id_seance);\n    fd.append(\"tags\", ft);\n    let idee = this.state.form.enonce_idee;\n    axios.post(\"http://localhost/innov_ecl/CreateIdee.php\", fd).then(res => {\n      const fd1 = new FormData();\n      fd1.append(\"id_idee\", res.data);\n      fd1.append(\"idee\", idee);\n      axios.post(\"http://localhost/innov_ecl/AddToFinalScore.php\", fd1);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({ ...this.state,\n      ideas: [...this.state.ideas, {\n        id_question: this.state.current.id_question,\n        enonce_idee: this.state.form.enonce_idee,\n        tags: this.state.form.tags\n      }],\n      form: {\n        ennonce_idee: \"\",\n        tags: [{\n          key: 1,\n          value: \"\"\n        }]\n      }\n    });\n  }\n\n  removeTag(index, e) {\n    if (index !== -1) {\n      this.state.form.tags.splice(index, 1);\n      this.forceUpdate();\n    }\n\n    if (this.state.form.tags.length !== 3) {\n      this.setState({ ...this.state,\n        visible: true\n      });\n    }\n\n    e.preventDefault();\n  }\n\n  addTag(e) {\n    e.preventDefault();\n    this.state.form.tags.push({\n      key: this.state.form.tags.length,\n      value: \"\"\n    });\n\n    if (this.state.form.tags.length === 3) {\n      this.setState({ ...this.state,\n        visible: false\n      });\n    }\n\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.state,\n      current: { ...this.props.selectedQuestions[this.state.i]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ideas\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        ref: \"form\",\n        model: this.state.form,\n        rules: this.state.rules,\n        labelWidth: \"100\",\n        className: \"demo-dynamic\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: `Question ${this.state.i + 1} : \n                ${this.state.current.enonce_question}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          prop: \"enonce_idee\",\n          label: \"Idee\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: this.state.form.enonce_idee,\n            onChange: e => {\n              this.setState({ ...this.state,\n                form: { ...this.state.form,\n                  enonce_idee: e\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), this.state.form.tags.map((tag, index) => {\n          return /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: `Tag ${index + 1}`,\n            prop: `tags:${index}`,\n            style: {\n              textAlign: \"left\"\n            },\n            rules: {\n              type: \"object\",\n              required: true,\n              fields: {\n                value: {\n                  required: true,\n                  message: \"Ecrire le tag\",\n                  trigger: \"blur\"\n                }\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: tag.value,\n              style: {\n                width: \"50%\",\n                marginRight: \"10px\"\n              },\n              onChange: e => {\n                let t = this.state.form.tags;\n                t[index].value = e;\n                this.setState({ ...this.state,\n                  form: { ...this.state.form,\n                    tags: [...t]\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), index === 0 ? \"\" : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: e => {\n                this.removeTag(index, e);\n              },\n              children: \"Supprimer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Form.Item, {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"el-button el-button--danger\",\n            onClick: e => {\n              e.preventDefault();\n              this.refs.form.validate(valid => {\n                if (valid) {\n                  this.addIdea();\n                } else {\n                  return false;\n                }\n              });\n            },\n            children: \"Ajouter Idee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => this.addTag(e),\n            style: {\n              display: `${this.state.visible ? \"inline-block\" : \"none\"}`\n            },\n            children: \"Nouveau Tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"el-button el-button--danger is-plain createBtn\",\n            style: {\n              display: `${this.state.next ? \"inline-block\" : \"none\"}`\n            },\n            onClick: e => {\n              e.preventDefault();\n              this.nextQuestion();\n            },\n            children: \"Question Suivante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        style: {\n          marginBottom: \"30px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            plain: true,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"el-icon-arrow-left el-icon-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                textDecoration: \"none\"\n              },\n              to: \"/TableQuestions\",\n              children: \"Etape Pr\\xE9c\\xE9dente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            plain: true,\n            onClick: e => {\n              e.preventDefault();\n              this.nextQuestion();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                textDecoration: \"none\"\n              },\n              to: {\n                pathname: \"/TableIdees\",\n                state: this.props.selectedQuestions\n              },\n              children: \"Etape Suivante\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"el-icon-arrow-right el-icon-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedQuestions: state.questions.selectedQuestions.questions,\n  seance: state.seance.seance\n});\n\nexport default connect(mapStateToProps, {\n  addIdeas\n})(Divergence);","map":{"version":3,"sources":["C:/Users/manal/Pictures/innovecl/innovecl/src/Components/Divergence.jsx"],"names":["React","Component","Button","Input","Form","Link","i18n","locale","connect","addIdeas","axios","use","Divergence","constructor","props","state","i","current","ideas","form","enonce_idee","tags","key","value","visible","next","rules","required","message","trigger","validator","rule","callback","Error","nextQuestion","setState","selectedQuestions","length","forEach","idea","map","tag","ft","join","push","id_question","addIdea","fd","FormData","append","seance","id_seance","idee","post","then","res","fd1","data","catch","error","console","log","ennonce_idee","removeTag","index","e","splice","forceUpdate","preventDefault","addTag","componentDidMount","render","enonce_question","textAlign","type","fields","width","marginRight","t","refs","validate","valid","display","marginBottom","textDecoration","pathname","mapStateToProps","questions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Input, Form } from \"element-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { i18n } from \"element-react\";\r\nimport locale from \"element-react/src/locale/lang/en\";\r\nimport \"element-theme-default\";\r\nimport \"./Table.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addIdeas } from \"../actions/ideaAction\";\r\nimport axios from \"axios\";\r\n\r\ni18n.use(locale);\r\n\r\nexport class Divergence extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            i: 0,\r\n            current: [],\r\n            ideas: [],\r\n            form: {\r\n                enonce_idee: \"\",\r\n                tags: [{ key: 1, value: \"\" }],\r\n            },\r\n            visible: true,\r\n            next: true,\r\n            rules: {\r\n                enonce_idee: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Ecrire l'idee\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                    {\r\n                        validator: (rule, value, callback) => {\r\n                            if (value === \"\") {\r\n                                callback(new Error(\"Idee vide\"));\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        };\r\n    }\r\n\r\n    nextQuestion() {\r\n        this.setState({\r\n            ...this.state,\r\n            i: this.state.i + 1,\r\n            current: {\r\n                ...this.props.selectedQuestions[this.state.i + 1],\r\n            },\r\n        });\r\n        if (this.state.i === this.props.selectedQuestions.length - 1) {\r\n            this.setState({ ...this.state, next: false });\r\n        }\r\n\r\n        const ideas = [];\r\n        this.state.ideas.forEach((idea) => {\r\n            const tags = idea.tags.map((tag) => {\r\n                return tag.value;\r\n            });\r\n            const ft = tags.join(\", \");\r\n            ideas.push({\r\n                id_question: idea.id_question,\r\n                enonce_idee: idea.enonce_idee,\r\n                tags: ft,\r\n            });\r\n        });\r\n        this.props.addIdeas(ideas);\r\n    }\r\n\r\n    addIdea() {\r\n        const fd = new FormData();\r\n        const tags = this.state.form.tags.map((tag) => {\r\n            return tag.value;\r\n        });\r\n        const ft = tags.join(\", \");\r\n        fd.append(\"id_question\", this.state.current.id_question);\r\n        fd.append(\"enonce_idee\", this.state.form.enonce_idee);\r\n        fd.append(\"id_seance\", this.props.seance.id_seance);\r\n        fd.append(\"tags\", ft);\r\n        let idee = this.state.form.enonce_idee;\r\n        axios\r\n            .post(\"http://localhost/innov_ecl/CreateIdee.php\", fd)\r\n            .then((res) => {\r\n                const fd1 = new FormData();\r\n                fd1.append(\"id_idee\", res.data);\r\n                fd1.append(\"idee\", idee);\r\n                axios.post(\r\n                    \"http://localhost/innov_ecl/AddToFinalScore.php\",\r\n                    fd1\r\n                );\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            ideas: [\r\n                ...this.state.ideas,\r\n                {\r\n                    id_question: this.state.current.id_question,\r\n                    enonce_idee: this.state.form.enonce_idee,\r\n                    tags: this.state.form.tags,\r\n                },\r\n            ],\r\n            form: { ennonce_idee: \"\", tags: [{ key: 1, value: \"\" }] },\r\n        });\r\n    }\r\n\r\n    removeTag(index, e) {\r\n        if (index !== -1) {\r\n            this.state.form.tags.splice(index, 1);\r\n            this.forceUpdate();\r\n        }\r\n\r\n        if (this.state.form.tags.length !== 3) {\r\n            this.setState({ ...this.state, visible: true });\r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    addTag(e) {\r\n        e.preventDefault();\r\n\r\n        this.state.form.tags.push({\r\n            key: this.state.form.tags.length,\r\n            value: \"\",\r\n        });\r\n\r\n        if (this.state.form.tags.length === 3) {\r\n            this.setState({ ...this.state, visible: false });\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.state,\r\n            current: { ...this.props.selectedQuestions[this.state.i] },\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='ideas'>\r\n                <Form\r\n                    ref='form'\r\n                    model={this.state.form}\r\n                    rules={this.state.rules}\r\n                    labelWidth='100'\r\n                    className='demo-dynamic'\r\n                >\r\n                    <label>{`Question ${this.state.i + 1} : \r\n                ${this.state.current.enonce_question}`}</label>\r\n                    <Form.Item prop='enonce_idee' label='Idee'>\r\n                        <Input\r\n                            value={this.state.form.enonce_idee}\r\n                            onChange={(e) => {\r\n                                this.setState({\r\n                                    ...this.state,\r\n                                    form: {\r\n                                        ...this.state.form,\r\n                                        enonce_idee: e,\r\n                                    },\r\n                                });\r\n                            }}\r\n                        ></Input>\r\n                    </Form.Item>\r\n                    {this.state.form.tags.map((tag, index) => {\r\n                        return (\r\n                            <Form.Item\r\n                                key={index}\r\n                                label={`Tag ${index + 1}`}\r\n                                prop={`tags:${index}`}\r\n                                style={{ textAlign: \"left\" }}\r\n                                rules={{\r\n                                    type: \"object\",\r\n                                    required: true,\r\n                                    fields: {\r\n                                        value: {\r\n                                            required: true,\r\n                                            message: \"Ecrire le tag\",\r\n                                            trigger: \"blur\",\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            >\r\n                                <Input\r\n                                    value={tag.value}\r\n                                    style={{\r\n                                        width: \"50%\",\r\n                                        marginRight: \"10px\",\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        let t = this.state.form.tags;\r\n                                        t[index].value = e;\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            form: {\r\n                                                ...this.state.form,\r\n                                                tags: [...t],\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                ></Input>\r\n                                {index === 0 ? (\r\n                                    \"\"\r\n                                ) : (\r\n                                    <Button\r\n                                        onClick={(e) => {\r\n                                            this.removeTag(index, e);\r\n                                        }}\r\n                                    >\r\n                                        Supprimer\r\n                                    </Button>\r\n                                )}\r\n                            </Form.Item>\r\n                        );\r\n                    })}\r\n                    <Form.Item style={{ textAlign: \"left\" }}>\r\n                        <button\r\n                            className='el-button el-button--danger'\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.refs.form.validate((valid) => {\r\n                                    if (valid) {\r\n                                        this.addIdea();\r\n                                    } else {\r\n                                        return false;\r\n                                    }\r\n                                });\r\n                            }}\r\n                        >\r\n                            Ajouter Idee\r\n                        </button>\r\n                        <Button\r\n                            onClick={(e) => this.addTag(e)}\r\n                            style={{\r\n                                display: `${\r\n                                    this.state.visible ? \"inline-block\" : \"none\"\r\n                                }`,\r\n                            }}\r\n                        >\r\n                            Nouveau Tag\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Form.Item style={{ textAlign: \"right\" }}>\r\n                        <button\r\n                            className='el-button el-button--danger is-plain createBtn'\r\n                            style={{\r\n                                display: `${\r\n                                    this.state.next ? \"inline-block\" : \"none\"\r\n                                }`,\r\n                            }}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.nextQuestion();\r\n                            }}\r\n                        >\r\n                            Question Suivante\r\n                        </button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n                <div className='footer' style={{ marginBottom: \"30px\" }}>\r\n                    <Button.Group>\r\n                        <Button type='danger' plain={true}>\r\n                            <i className='el-icon-arrow-left el-icon-left'></i>\r\n                            <Link\r\n                                style={{ textDecoration: \"none\" }}\r\n                                to='/TableQuestions'\r\n                            >\r\n                                Etape Précédente\r\n                            </Link>\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type='danger'\r\n                            plain={true}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                this.nextQuestion();\r\n                            }}\r\n                        >\r\n                            <Link\r\n                                style={{ textDecoration: \"none\" }}\r\n                                to={{\r\n                                    pathname: \"/TableIdees\",\r\n                                    state: this.props.selectedQuestions,\r\n                                }}\r\n                            >\r\n                                Etape Suivante\r\n                            </Link>\r\n                            <i className='el-icon-arrow-right el-icon-right'></i>\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n                {/* <Radio.Group size=\"small\" value={this.state.labelPosition} onChange={this.onPositionChange.bind(this)}>\r\n        <Radio.Button value=\"left\">Left</Radio.Button>\r\n        <Radio.Button value=\"right\">Right</Radio.Button>\r\n        <Radio.Button value=\"top\">Top</Radio.Button>\r\n      </Radio.Group>\r\n      <div style={{ margin: 20 }}></div>\r\n      <Form className=\"demo-form-stacked\" model={this.state.form} labelPosition={this.state.labelPosition} labelWidth=\"100\">\r\n      <Etiquettes array= {this.props.dynamicTags}/>\r\n        <Form.Item label=\"Question 1 ?\">\r\n          <Input value={this.state.form.name} onChange={this.onChange.bind(this, 'name')}></Input>\r\n        </Form.Item>\r\n        <Form.Item>\r\n        <Button type=\"danger\" nativeType=\"submit\">Envoyer</Button>\r\n        <Button>Annuler</Button>\r\n      </Form.Item>\r\n      <div className='footer' style={{marginBottom:'30px'}}>\r\n      <Button.Group>\r\n      \r\n          \r\n          <Button plain={true} type=\"danger\"><i className=\"el-icon-arrow-left el-icon-left\"></i>\r\n          <a style={{ textDecoration: 'none' }} href=\"/TableQuestions\">Etape précédente</a>\r\n          </Button>\r\n          \r\n          \r\n          <Button plain={true} type=\"danger\"><i className=\"el-icon-arrow-right el-icon-right\"></i>\r\n          <a style={{ textDecoration: 'none' }} href=\"/TableCriteres\">Etape Suivante</a>\r\n          </Button>\r\n          \r\n      </Button.Group>\r\n      </div>\r\n      </Form> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedQuestions: state.questions.selectedQuestions.questions,\r\n    seance: state.seance.seance,\r\n});\r\nexport default connect(mapStateToProps, { addIdeas })(Divergence);\r\n"]},"metadata":{},"sourceType":"module"}