{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manal\\\\Pictures\\\\innovecl\\\\innovecl\\\\src\\\\Components\\\\Notation.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Form, Select } from \"element-react\";\nimport { i18n } from \"element-react\";\nimport locale from \"element-react/src/locale/lang/en\";\nimport axios from \"axios\";\nimport \"element-theme-default\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(locale);\nexport class Notation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: false,\n      count: 1,\n      ideas: [],\n      current: {},\n      currentIdea: 1,\n      form: {\n        notes: []\n      },\n      rules: {\n        notes: [{\n          required: true,\n          type: \"array\",\n          message: \"Donner une note\",\n          trigger: \"change\"\n        }]\n      },\n      options: [{\n        value: 1,\n        label: \"1\"\n      }, {\n        value: 3,\n        label: \"3\"\n      }, {\n        value: 7,\n        label: \"7\"\n      }, {\n        value: 10,\n        label: \"10\"\n      }]\n    };\n  }\n\n  sendData() {\n    this.state.form.notes.forEach((note, index) => {\n      let mark = note;\n      let id_critere = this.props.selectedCriteria[index].id_criteres;\n      let id_idee = this.state.current.id_idée;\n      const fd = new FormData();\n      fd.append(\"note\", mark);\n      fd.append(\"id_critere\", id_critere);\n      fd.append(\"id_idee\", id_idee);\n      fd.append(\"id_seance\", this.props.seance.id_seance);\n      axios.post(\"http://localhost/innov_ecl/CreateNote.php\", fd).then(res => {\n        console.log(res);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      const fd1 = new FormData();\n      fd1.append(\"id\", id_idee);\n      axios.post(\"http://localhost/innov_ecl/GetIdeaScore.php\", fd1).then(res => {\n        const fd2 = new FormData();\n        fd2.append(\"id\", id_idee);\n        fd2.append(\"score\", parseInt(res.data.score) * mark);\n        axios.post(\"http://localhost/innov_ecl/UpdateIdeaScore.php\", fd2);\n      });\n    });\n    this.setState({ ...this.state,\n      done: true\n    });\n  }\n\n  componentDidMount() {\n    const fd = new FormData();\n    fd.append(\"id\", this.props.seance.id_seance);\n    axios.post(\"http://localhost/innov_ecl/GetIdea.php\", fd).then(res => {\n      this.setState({ ...this.state,\n        ideas: res.data,\n        current: res.data[this.state.currentIdea - 1]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"75%\",\n        margin: \"0 auto\",\n        textAlign: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          marginBottom: \"30px\"\n        },\n        children: \"Notation des id\\xE9es selon les crit\\xE8res choisis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: this.state.ideas.length === 0 ? \"Pas d'idèes a évaluer\" : `Idee ${this.state.currentIdea < 10 ? `0${this.state.currentIdea}` : `${this.state.currentIdea}`} : ${this.state.current.enonce_idee}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        ref: \"form\",\n        model: this.state.form,\n        rules: this.state.rules,\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          marginTop: \"40px\"\n        },\n        children: this.props.selectedCriteria.map((criteria, index) => {\n          return /*#__PURE__*/_jsxDEV(Form.Item, {\n            prop: \"notes\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: `Critère 0${index + 1} : ${criteria.enonce_critere}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Choisir une note\",\n              value: this.state.form.notes.length === 0 ? 0 : this.state.form.notes[index],\n              clearable: true,\n              onClear: e => {\n                /* this.state.form.notes.splice(index, 1); */\n                let arr = this.state.form.notes;\n                arr[index] = 0;\n                this.setState({ ...this.state,\n                  form: {\n                    notes: arr\n                  }\n                });\n              },\n              onChange: e => {\n                if (e !== \"\") {\n                  let arr = this.state.form.notes;\n                  arr[index] = e;\n                  this.setState({ ...this.state,\n                    form: {\n                      notes: arr\n                    }\n                  });\n                }\n              },\n              children: this.state.options.map(el => {\n                return /*#__PURE__*/_jsxDEV(Select.Option, {\n                  label: el.label,\n                  value: el.value\n                }, el.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"el-button el-button--danger is-plain createBtn\",\n          disabled: this.state.done,\n          onClick: e => {\n            e.preventDefault();\n            this.refs.form.validate(valid => {\n              const index = this.state.form.notes.indexOf(0);\n\n              if (valid && index === -1) {\n                this.sendData();\n              } else {\n                return false;\n              }\n            });\n          },\n          children: \"Enregistrer les notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"el-button el-button--danger createBtn\",\n          style: {\n            float: \"right\"\n          },\n          disabled: this.state.currentIdea !== this.state.ideas.length ? false : true,\n          onClick: e => {\n            e.preventDefault();\n            this.refs.form.validate(valid => {\n              if (valid) {\n                if (this.state.currentIdea !== this.state.ideas.length) {\n                  this.setState({ ...this.state,\n                    currentIdea: this.state.currentIdea + 1,\n                    current: this.state.ideas[this.state.currentIdea],\n                    done: false,\n                    form: {\n                      notes: []\n                    }\n                  });\n                }\n\n                this.forceUpdate();\n              } else {\n                return false;\n              }\n            });\n          },\n          children: \"Id\\xE9e Suivante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            plain: true,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"el-icon-arrow-left el-icon-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                textDecoration: \"none\"\n              },\n              href: \"/TableCriteres\",\n              children: \"Etape pr\\xE9c\\xE9dente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            plain: true,\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                textDecoration: \"none\"\n              },\n              href: \"/TableNotes\",\n              children: \"Etape Suivante\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"el-icon-arrow-right el-icon-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedCriteria: state.criteria.selectedCriteria[Math.abs(state.steps - 3)],\n  seance: state.seance.seance\n});\n\nexport default connect(mapStateToProps)(Notation);","map":{"version":3,"sources":["C:/Users/manal/Pictures/innovecl/innovecl/src/Components/Notation.jsx"],"names":["React","Component","Button","Form","Select","i18n","locale","axios","connect","use","Notation","constructor","props","state","done","count","ideas","current","currentIdea","form","notes","rules","required","type","message","trigger","options","value","label","sendData","forEach","note","index","mark","id_critere","selectedCriteria","id_criteres","id_idee","id_idée","fd","FormData","append","seance","id_seance","post","then","res","console","log","catch","error","fd1","fd2","parseInt","data","score","setState","componentDidMount","render","width","margin","textAlign","marginBottom","length","enonce_idee","display","flexDirection","alignItems","justifyContent","marginTop","map","criteria","enonce_critere","e","arr","el","preventDefault","refs","validate","valid","indexOf","float","forceUpdate","textDecoration","mapStateToProps","Math","abs","steps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,eAArC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEAH,IAAI,CAACI,GAAL,CAASH,MAAT;AACA,OAAO,MAAMI,QAAN,SAAuBT,SAAvB,CAAiC;AACpCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KADG;AAETC,MAAAA,KAAK,EAAE,CAFE;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,WAAW,EAAE,CALJ;AAMTC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE;AADL,OANG;AASTC,MAAAA,KAAK,EAAE;AACHD,QAAAA,KAAK,EAAE,CACH;AACIE,UAAAA,QAAQ,EAAE,IADd;AAEIC,UAAAA,IAAI,EAAE,OAFV;AAGIC,UAAAA,OAAO,EAAE,iBAHb;AAIIC,UAAAA,OAAO,EAAE;AAJb,SADG;AADJ,OATE;AAmBTC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,KAAK,EAAE,CADX;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADK,EAKL;AACID,QAAAA,KAAK,EAAE,CADX;AAEIC,QAAAA,KAAK,EAAE;AAFX,OALK,EASL;AACID,QAAAA,KAAK,EAAE,CADX;AAEIC,QAAAA,KAAK,EAAE;AAFX,OATK,EAaL;AACID,QAAAA,KAAK,EAAE,EADX;AAEIC,QAAAA,KAAK,EAAE;AAFX,OAbK;AAnBA,KAAb;AAsCH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,SAAKhB,KAAL,CAAWM,IAAX,CAAgBC,KAAhB,CAAsBU,OAAtB,CAA8B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3C,UAAIC,IAAI,GAAGF,IAAX;AACA,UAAIG,UAAU,GAAG,KAAKtB,KAAL,CAAWuB,gBAAX,CAA4BH,KAA5B,EAAmCI,WAApD;AACA,UAAIC,OAAO,GAAG,KAAKxB,KAAL,CAAWI,OAAX,CAAmBqB,OAAjC;AAEA,YAAMC,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,MAAAA,EAAE,CAACE,MAAH,CAAU,MAAV,EAAkBR,IAAlB;AACAM,MAAAA,EAAE,CAACE,MAAH,CAAU,YAAV,EAAwBP,UAAxB;AACAK,MAAAA,EAAE,CAACE,MAAH,CAAU,SAAV,EAAqBJ,OAArB;AACAE,MAAAA,EAAE,CAACE,MAAH,CAAU,WAAV,EAAuB,KAAK7B,KAAL,CAAW8B,MAAX,CAAkBC,SAAzC;AACApC,MAAAA,KAAK,CACAqC,IADL,CACU,2CADV,EACuDL,EADvD,EAEKM,IAFL,CAEWC,GAAD,IAAS;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAJL,EAKKG,KALL,CAKW,UAAUC,KAAV,EAAiB;AACpBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OAPL;AAQA,YAAMC,GAAG,GAAG,IAAIX,QAAJ,EAAZ;AACAW,MAAAA,GAAG,CAACV,MAAJ,CAAW,IAAX,EAAiBJ,OAAjB;AACA9B,MAAAA,KAAK,CACAqC,IADL,CACU,6CADV,EACyDO,GADzD,EAEKN,IAFL,CAEWC,GAAD,IAAS;AACX,cAAMM,GAAG,GAAG,IAAIZ,QAAJ,EAAZ;AACAY,QAAAA,GAAG,CAACX,MAAJ,CAAW,IAAX,EAAiBJ,OAAjB;AACAe,QAAAA,GAAG,CAACX,MAAJ,CAAW,OAAX,EAAoBY,QAAQ,CAACP,GAAG,CAACQ,IAAJ,CAASC,KAAV,CAAR,GAA2BtB,IAA/C;AACA1B,QAAAA,KAAK,CAACqC,IAAN,CACI,gDADJ,EAEIQ,GAFJ;AAIH,OAVL;AAWH,KA/BD;AAgCA,SAAKI,QAAL,CAAc,EACV,GAAG,KAAK3C,KADE;AAEVC,MAAAA,IAAI,EAAE;AAFI,KAAd;AAIH;;AAED2C,EAAAA,iBAAiB,GAAG;AAChB,UAAMlB,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,EAAE,CAACE,MAAH,CAAU,IAAV,EAAgB,KAAK7B,KAAL,CAAW8B,MAAX,CAAkBC,SAAlC;AACApC,IAAAA,KAAK,CAACqC,IAAN,CAAW,wCAAX,EAAqDL,EAArD,EAAyDM,IAAzD,CAA+DC,GAAD,IAAS;AACnE,WAAKU,QAAL,CAAc,EACV,GAAG,KAAK3C,KADE;AAEVG,QAAAA,KAAK,EAAE8B,GAAG,CAACQ,IAFD;AAGVrC,QAAAA,OAAO,EAAE6B,GAAG,CAACQ,IAAJ,CAAS,KAAKzC,KAAL,CAAWK,WAAX,GAAyB,CAAlC;AAHC,OAAd;AAKH,KAND;AAOH;;AAEDwC,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,KADJ;AAEHC,QAAAA,MAAM,EAAE,QAFL;AAGHC,QAAAA,SAAS,EAAE;AAHR,OADX;AAAA,8BAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAI,QAAA,KAAK,EAAE;AAAEA,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,YAAY,EAAE;AAArC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAWI;AAAA,kBACK,KAAKjD,KAAL,CAAWG,KAAX,CAAiB+C,MAAjB,KAA4B,CAA5B,GACK,uBADL,GAEM,QACG,KAAKlD,KAAL,CAAWK,WAAX,GAAyB,EAAzB,GACO,IAAG,KAAKL,KAAL,CAAWK,WAAY,EADjC,GAEO,GAAE,KAAKL,KAAL,CAAWK,WAAY,EACnC,MAAK,KAAKL,KAAL,CAAWI,OAAX,CAAmB+C,WAAY;AAP/C;AAAA;AAAA;AAAA;AAAA,cAXJ,eAoBI,QAAC,IAAD;AACI,QAAA,GAAG,EAAC,MADR;AAEI,QAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWM,IAFtB;AAGI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWQ,KAHtB;AAII,QAAA,KAAK,EAAE;AACH4C,UAAAA,OAAO,EAAE,MADN;AAEHC,UAAAA,aAAa,EAAE,KAFZ;AAGHC,UAAAA,UAAU,EAAE,QAHT;AAIHC,UAAAA,cAAc,EAAE,cAJb;AAKHC,UAAAA,SAAS,EAAE;AALR,SAJX;AAAA,kBAYK,KAAKzD,KAAL,CAAWuB,gBAAX,CAA4BmC,GAA5B,CAAgC,CAACC,QAAD,EAAWvC,KAAX,KAAqB;AAClD,8BACI,QAAC,IAAD,CAAM,IAAN;AAAuB,YAAA,IAAI,EAAC,OAA5B;AAAA,oCACI;AAAA,wBAAS,YAAWA,KAAK,GAAG,CAAE,MAC1BuC,QAAQ,CAACC,cACZ;AAFD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,MAAD;AACI,cAAA,WAAW,EAAC,kBADhB;AAEI,cAAA,KAAK,EACD,KAAK3D,KAAL,CAAWM,IAAX,CAAgBC,KAAhB,CAAsB2C,MAAtB,KAAiC,CAAjC,GACM,CADN,GAEM,KAAKlD,KAAL,CAAWM,IAAX,CAAgBC,KAAhB,CAAsBY,KAAtB,CALd;AAOI,cAAA,SAAS,EAAE,IAPf;AAQI,cAAA,OAAO,EAAGyC,CAAD,IAAO;AACZ;AACA,oBAAIC,GAAG,GAAG,KAAK7D,KAAL,CAAWM,IAAX,CAAgBC,KAA1B;AACAsD,gBAAAA,GAAG,CAAC1C,KAAD,CAAH,GAAa,CAAb;AACA,qBAAKwB,QAAL,CAAc,EACV,GAAG,KAAK3C,KADE;AAEVM,kBAAAA,IAAI,EAAE;AAAEC,oBAAAA,KAAK,EAAEsD;AAAT;AAFI,iBAAd;AAIH,eAhBL;AAiBI,cAAA,QAAQ,EAAGD,CAAD,IAAO;AACb,oBAAIA,CAAC,KAAK,EAAV,EAAc;AACV,sBAAIC,GAAG,GAAG,KAAK7D,KAAL,CAAWM,IAAX,CAAgBC,KAA1B;AACAsD,kBAAAA,GAAG,CAAC1C,KAAD,CAAH,GAAayC,CAAb;AACA,uBAAKjB,QAAL,CAAc,EACV,GAAG,KAAK3C,KADE;AAEVM,oBAAAA,IAAI,EAAE;AAAEC,sBAAAA,KAAK,EAAEsD;AAAT;AAFI,mBAAd;AAIH;AACJ,eA1BL;AAAA,wBA4BK,KAAK7D,KAAL,CAAWa,OAAX,CAAmB4C,GAAnB,CAAwBK,EAAD,IAAQ;AAC5B,oCACI,QAAC,MAAD,CAAQ,MAAR;AAEI,kBAAA,KAAK,EAAEA,EAAE,CAAC/C,KAFd;AAGI,kBAAA,KAAK,EAAE+C,EAAE,CAAChD;AAHd,mBACSgD,EAAE,CAAChD,KADZ;AAAA;AAAA;AAAA;AAAA,wBADJ;AAOH,eARA;AA5BL;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA,aAAgBK,KAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ;AA6CH,SA9CA;AAZL;AAAA;AAAA;AAAA;AAAA,cApBJ,eAgFI;AAAA,gCACI,QAAC,MAAD;AACI,UAAA,SAAS,EAAC,gDADd;AAEI,UAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWC,IAFzB;AAGI,UAAA,OAAO,EAAG2D,CAAD,IAAO;AACZA,YAAAA,CAAC,CAACG,cAAF;AACA,iBAAKC,IAAL,CAAU1D,IAAV,CAAe2D,QAAf,CAAyBC,KAAD,IAAW;AAC/B,oBAAM/C,KAAK,GAAG,KAAKnB,KAAL,CAAWM,IAAX,CAAgBC,KAAhB,CAAsB4D,OAAtB,CAA8B,CAA9B,CAAd;;AACA,kBAAID,KAAK,IAAI/C,KAAK,KAAK,CAAC,CAAxB,EAA2B;AACvB,qBAAKH,QAAL;AACH,eAFD,MAEO;AACH,uBAAO,KAAP;AACH;AACJ,aAPD;AAQH,WAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkBI,QAAC,MAAD;AACI,UAAA,SAAS,EAAC,uCADd;AAEI,UAAA,KAAK,EAAE;AAAEoD,YAAAA,KAAK,EAAE;AAAT,WAFX;AAGI,UAAA,QAAQ,EACJ,KAAKpE,KAAL,CAAWK,WAAX,KAA2B,KAAKL,KAAL,CAAWG,KAAX,CAAiB+C,MAA5C,GACM,KADN,GAEM,IANd;AAQI,UAAA,OAAO,EAAGU,CAAD,IAAO;AACZA,YAAAA,CAAC,CAACG,cAAF;AACA,iBAAKC,IAAL,CAAU1D,IAAV,CAAe2D,QAAf,CAAyBC,KAAD,IAAW;AAC/B,kBAAIA,KAAJ,EAAW;AACP,oBACI,KAAKlE,KAAL,CAAWK,WAAX,KACA,KAAKL,KAAL,CAAWG,KAAX,CAAiB+C,MAFrB,EAGE;AACE,uBAAKP,QAAL,CAAc,EACV,GAAG,KAAK3C,KADE;AAEVK,oBAAAA,WAAW,EACP,KAAKL,KAAL,CAAWK,WAAX,GAAyB,CAHnB;AAIVD,oBAAAA,OAAO,EACH,KAAKJ,KAAL,CAAWG,KAAX,CACI,KAAKH,KAAL,CAAWK,WADf,CALM;AAQVJ,oBAAAA,IAAI,EAAE,KARI;AASVK,oBAAAA,IAAI,EAAE;AAAEC,sBAAAA,KAAK,EAAE;AAAT;AATI,mBAAd;AAWH;;AACD,qBAAK8D,WAAL;AACH,eAlBD,MAkBO;AACH,uBAAO,KAAP;AACH;AACJ,aAtBD;AAuBH,WAjCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhFJ,eAwII;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAE;AAAErB,UAAAA,SAAS,EAAE;AAAb,SAA/B;AAAA,+BACI,QAAC,MAAD,CAAQ,KAAR;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAE,IAA7B;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,KAAK,EAAE;AAAEsB,gBAAAA,cAAc,EAAE;AAAlB,eADX;AAEI,cAAA,IAAI,EAAC,gBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAE,IAA7B;AAAA,oCACI;AACI,cAAA,KAAK,EAAE;AAAEA,gBAAAA,cAAc,EAAE;AAAlB,eADX;AAEI,cAAA,IAAI,EAAC,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxIJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiKH;;AAjQmC;;AAmQxC,MAAMC,eAAe,GAAIvE,KAAD,KAAY;AAChCsB,EAAAA,gBAAgB,EACZtB,KAAK,CAAC0D,QAAN,CAAepC,gBAAf,CAAgCkD,IAAI,CAACC,GAAL,CAASzE,KAAK,CAAC0E,KAAN,GAAc,CAAvB,CAAhC,CAF4B;AAGhC7C,EAAAA,MAAM,EAAE7B,KAAK,CAAC6B,MAAN,CAAaA;AAHW,CAAZ,CAAxB;;AAKA,eAAelC,OAAO,CAAC4E,eAAD,CAAP,CAAyB1E,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Form, Select } from \"element-react\";\r\nimport { i18n } from \"element-react\";\r\nimport locale from \"element-react/src/locale/lang/en\";\r\nimport axios from \"axios\";\r\n\r\nimport \"element-theme-default\";\r\nimport { connect } from \"react-redux\";\r\n\r\ni18n.use(locale);\r\nexport class Notation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            done: false,\r\n            count: 1,\r\n            ideas: [],\r\n            current: {},\r\n            currentIdea: 1,\r\n            form: {\r\n                notes: [],\r\n            },\r\n            rules: {\r\n                notes: [\r\n                    {\r\n                        required: true,\r\n                        type: \"array\",\r\n                        message: \"Donner une note\",\r\n                        trigger: \"change\",\r\n                    },\r\n                ],\r\n            },\r\n            options: [\r\n                {\r\n                    value: 1,\r\n                    label: \"1\",\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label: \"3\",\r\n                },\r\n                {\r\n                    value: 7,\r\n                    label: \"7\",\r\n                },\r\n                {\r\n                    value: 10,\r\n                    label: \"10\",\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    sendData() {\r\n        this.state.form.notes.forEach((note, index) => {\r\n            let mark = note;\r\n            let id_critere = this.props.selectedCriteria[index].id_criteres;\r\n            let id_idee = this.state.current.id_idée;\r\n\r\n            const fd = new FormData();\r\n            fd.append(\"note\", mark);\r\n            fd.append(\"id_critere\", id_critere);\r\n            fd.append(\"id_idee\", id_idee);\r\n            fd.append(\"id_seance\", this.props.seance.id_seance);\r\n            axios\r\n                .post(\"http://localhost/innov_ecl/CreateNote.php\", fd)\r\n                .then((res) => {\r\n                    console.log(res);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n            const fd1 = new FormData();\r\n            fd1.append(\"id\", id_idee);\r\n            axios\r\n                .post(\"http://localhost/innov_ecl/GetIdeaScore.php\", fd1)\r\n                .then((res) => {\r\n                    const fd2 = new FormData();\r\n                    fd2.append(\"id\", id_idee);\r\n                    fd2.append(\"score\", parseInt(res.data.score) * mark);\r\n                    axios.post(\r\n                        \"http://localhost/innov_ecl/UpdateIdeaScore.php\",\r\n                        fd2\r\n                    );\r\n                });\r\n        });\r\n        this.setState({\r\n            ...this.state,\r\n            done: true,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const fd = new FormData();\r\n        fd.append(\"id\", this.props.seance.id_seance);\r\n        axios.post(\"http://localhost/innov_ecl/GetIdea.php\", fd).then((res) => {\r\n            this.setState({\r\n                ...this.state,\r\n                ideas: res.data,\r\n                current: res.data[this.state.currentIdea - 1],\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: \"75%\",\r\n                    margin: \"0 auto\",\r\n                    textAlign: \"left\",\r\n                }}\r\n            >\r\n                <br></br>\r\n                <h2 style={{ textAlign: \"center\", marginBottom: \"30px\" }}>\r\n                    Notation des idées selon les critères choisis\r\n                </h2>\r\n                <label>\r\n                    {this.state.ideas.length === 0\r\n                        ? \"Pas d'idèes a évaluer\"\r\n                        : `Idee ${\r\n                              this.state.currentIdea < 10\r\n                                  ? `0${this.state.currentIdea}`\r\n                                  : `${this.state.currentIdea}`\r\n                          } : ${this.state.current.enonce_idee}`}\r\n                </label>\r\n                <Form\r\n                    ref='form'\r\n                    model={this.state.form}\r\n                    rules={this.state.rules}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\",\r\n                        marginTop: \"40px\",\r\n                    }}\r\n                >\r\n                    {this.props.selectedCriteria.map((criteria, index) => {\r\n                        return (\r\n                            <Form.Item key={index} prop='notes'>\r\n                                <label>{`Critère 0${index + 1} : ${\r\n                                    criteria.enonce_critere\r\n                                }`}</label>\r\n                                <Select\r\n                                    placeholder='Choisir une note'\r\n                                    value={\r\n                                        this.state.form.notes.length === 0\r\n                                            ? 0\r\n                                            : this.state.form.notes[index]\r\n                                    }\r\n                                    clearable={true}\r\n                                    onClear={(e) => {\r\n                                        /* this.state.form.notes.splice(index, 1); */\r\n                                        let arr = this.state.form.notes;\r\n                                        arr[index] = 0;\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            form: { notes: arr },\r\n                                        });\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        if (e !== \"\") {\r\n                                            let arr = this.state.form.notes;\r\n                                            arr[index] = e;\r\n                                            this.setState({\r\n                                                ...this.state,\r\n                                                form: { notes: arr },\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {this.state.options.map((el) => {\r\n                                        return (\r\n                                            <Select.Option\r\n                                                key={el.value}\r\n                                                label={el.label}\r\n                                                value={el.value}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        );\r\n                    })}\r\n                </Form>\r\n                <div>\r\n                    <Button\r\n                        className='el-button el-button--danger is-plain createBtn'\r\n                        disabled={this.state.done}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.refs.form.validate((valid) => {\r\n                                const index = this.state.form.notes.indexOf(0);\r\n                                if (valid && index === -1) {\r\n                                    this.sendData();\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            });\r\n                        }}\r\n                    >\r\n                        Enregistrer les notes\r\n                    </Button>\r\n                    <Button\r\n                        className='el-button el-button--danger createBtn'\r\n                        style={{ float: \"right\" }}\r\n                        disabled={\r\n                            this.state.currentIdea !== this.state.ideas.length\r\n                                ? false\r\n                                : true\r\n                        }\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.refs.form.validate((valid) => {\r\n                                if (valid) {\r\n                                    if (\r\n                                        this.state.currentIdea !==\r\n                                        this.state.ideas.length\r\n                                    ) {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            currentIdea:\r\n                                                this.state.currentIdea + 1,\r\n                                            current:\r\n                                                this.state.ideas[\r\n                                                    this.state.currentIdea\r\n                                                ],\r\n                                            done: false,\r\n                                            form: { notes: [] },\r\n                                        });\r\n                                    }\r\n                                    this.forceUpdate();\r\n                                } else {\r\n                                    return false;\r\n                                }\r\n                            });\r\n                        }}\r\n                    >\r\n                        Idée Suivante\r\n                    </Button>\r\n                </div>\r\n                <div className='footer' style={{ textAlign: \"center\" }}>\r\n                    <Button.Group>\r\n                        <Button type='danger' plain={true}>\r\n                            <i className='el-icon-arrow-left el-icon-left'></i>\r\n                            <a\r\n                                style={{ textDecoration: \"none\" }}\r\n                                href='/TableCriteres'\r\n                            >\r\n                                Etape précédente\r\n                            </a>\r\n                        </Button>\r\n                        <Button type='danger' plain={true}>\r\n                            <a\r\n                                style={{ textDecoration: \"none\" }}\r\n                                href='/TableNotes'\r\n                            >\r\n                                Etape Suivante\r\n                            </a>\r\n                            <i className='el-icon-arrow-right el-icon-right'></i>\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    selectedCriteria:\r\n        state.criteria.selectedCriteria[Math.abs(state.steps - 3)],\r\n    seance: state.seance.seance,\r\n});\r\nexport default connect(mapStateToProps)(Notation);\r\n"]},"metadata":{},"sourceType":"module"}