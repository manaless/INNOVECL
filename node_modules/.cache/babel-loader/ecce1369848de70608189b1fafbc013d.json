{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manal\\\\Pictures\\\\innovecl\\\\innovecl\\\\src\\\\Components\\\\TableQuestions.jsx\";\nimport React, { Component } from \"react\";\nimport { Table, Checkbox, Button, Popover, Input } from \"element-react\";\nimport { BrowserRouter as Router, Route, Link, Routes } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { i18n } from \"element-react\";\nimport locale from \"element-react/src/locale/lang/en\";\nimport \"element-theme-default\";\nimport \"./Table.css\";\nimport Ajout_question from \"./Ajout_question\";\nimport Modifier_question from \"./Modifier_question\";\nimport Supprimer_question from \"./Supprimer_question\";\nimport { addQuestions } from \"../actions/questionActions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(locale);\nexport class TableQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        type: \"selection\"\n      }, {\n        type: \"expand\",\n        expandPannel: function (data) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [\"Identifiant: \", data.id_question]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [\"Cat\\xE9gorie: \", data.categorie]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [\"Question: \", data.enonce_question]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this);\n        }\n      }, {\n        label: \" Id \",\n        prop: \"id_question\",\n        width: 60\n      }, {\n        label: \" CatÃ©gorie \",\n        prop: \"categorie\",\n        width: 160\n      }, {\n        label: \" Question \",\n        prop: \"enonce_question\",\n        width: 500\n      }, {\n        label: \"Operations\",\n        width: \"200\",\n        render: function (data) {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Popover, {\n              placement: \"right\",\n              title: \"Modifier une question\",\n              width: \"400\",\n              trigger: \"click\",\n              content: /*#__PURE__*/_jsxDEV(Modifier_question, {\n                question: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                plain: true,\n                type: \"info\",\n                size: \"small\",\n                style: {\n                  marginRight: \"10px\"\n                },\n                children: \"Modifier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Popover, {\n              placement: \"right\",\n              title: \"Supprimer une question\",\n              width: \"400\",\n              trigger: \"click\",\n              content: /*#__PURE__*/_jsxDEV(Supprimer_question, {\n                question: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 41\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                size: \"small\",\n                children: \"Supprimer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this);\n        }\n      }],\n      data: [],\n      rowClicked: [],\n      idRow: \"\"\n    };\n    this.getdata = props.getdata;\n  }\n\n  componentDidMount() {\n    window.onload = function () {\n      if (!window.location.hash) {\n        window.location = window.location + \"#loaded\";\n        window.location.reload();\n      }\n    };\n\n    window.onload();\n    axios.get(\"http://localhost/innov_ecl/GetQuestion.php\").then(res => {\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  getdata() {\n    axios.get(\"http://localhost/innov_ecl/GetQuestion.php\").then(res => {\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  onRowClick(row) {\n    this.setState({\n      rowClicked: row\n    }, function () {\n      console.log(this.state.rowClicked);\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choisissez les questions de divergence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContainerTable\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            style: {\n              width: \"100%\"\n            },\n            columns: this.state.columns,\n            data: this.state.data,\n            border: true,\n            emptyText: \"Pas de questions\",\n            onSelectChange: selection => {\n              this.props.addQuestions(selection);\n            },\n            onSelectAll: selection => {\n              this.props.addQuestions(selection);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Popover, {\n          placement: \"right\",\n          title: \"Ajouter une question\",\n          width: \"400\",\n          trigger: \"click\",\n          content: /*#__PURE__*/_jsxDEV(Ajout_question, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 34\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"createBtn\",\n            plain: true,\n            type: \"danger\",\n            children: \"Ajouter une question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            plain: true,\n            onClick: e => {\n              if (this.props.selectedQuestions.length === 0) {\n                alert(\"Choisir au moins une question.\");\n                e.preventDefault();\n              } else {\n                window.location.pathname = \"/Divergence\";\n              }\n            },\n            children: [\"Etape Suivante\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"el-icon-arrow-right el-icon-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedQuestions: state.questions.selectedQuestions.questions\n});\n\nexport default connect(mapStateToProps, {\n  addQuestions\n})(TableQuestions);","map":{"version":3,"sources":["C:/Users/manal/Pictures/innovecl/innovecl/src/Components/TableQuestions.jsx"],"names":["React","Component","Table","Checkbox","Button","Popover","Input","BrowserRouter","Router","Route","Link","Routes","axios","i18n","locale","Ajout_question","Modifier_question","Supprimer_question","addQuestions","connect","use","TableQuestions","constructor","props","state","columns","type","expandPannel","data","id_question","categorie","enonce_question","label","prop","width","render","marginRight","rowClicked","idRow","getdata","componentDidMount","window","onload","location","hash","reload","get","then","res","setState","onRowClick","row","console","log","componentWillUnmount","callback","selection","e","selectedQuestions","length","alert","preventDefault","pathname","mapStateToProps","questions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table, Checkbox, Button, Popover, Input } from \"element-react\";\r\nimport { BrowserRouter as Router, Route, Link, Routes } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { i18n } from \"element-react\";\r\nimport locale from \"element-react/src/locale/lang/en\";\r\nimport \"element-theme-default\";\r\nimport \"./Table.css\";\r\nimport Ajout_question from \"./Ajout_question\";\r\nimport Modifier_question from \"./Modifier_question\";\r\nimport Supprimer_question from \"./Supprimer_question\";\r\nimport { addQuestions } from \"../actions/questionActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\ni18n.use(locale);\r\nexport class TableQuestions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [\r\n                {\r\n                    type: \"selection\",\r\n                },\r\n                {\r\n                    type: \"expand\",\r\n                    expandPannel: function (data) {\r\n                        return (\r\n                            <div>\r\n                                <ol>\r\n                                    <ul>Identifiant: {data.id_question}</ul>\r\n                                    <ul>CatÃ©gorie: {data.categorie}</ul>\r\n                                    <ul>Question: {data.enonce_question}</ul>\r\n                                </ol>\r\n                            </div>\r\n                        );\r\n                    },\r\n                },\r\n\r\n                {\r\n                    label: \" Id \",\r\n                    prop: \"id_question\",\r\n                    width: 60,\r\n                },\r\n                {\r\n                    label: \" CatÃ©gorie \",\r\n                    prop: \"categorie\",\r\n                    width: 160,\r\n                },\r\n                {\r\n                    label: \" Question \",\r\n                    prop: \"enonce_question\",\r\n                    width: 500,\r\n                },\r\n                {\r\n                    label: \"Operations\",\r\n                    width: \"200\",\r\n                    render: function (data) {\r\n                        return (\r\n                            <span>\r\n                                <Popover\r\n                                    placement='right'\r\n                                    title='Modifier une question'\r\n                                    width='400'\r\n                                    trigger='click'\r\n                                    content={\r\n                                        <Modifier_question question={data} />\r\n                                    }\r\n                                >\r\n                                    <Button\r\n                                        plain={true}\r\n                                        type='info'\r\n                                        size='small'\r\n                                        style={{ marginRight: \"10px\" }}\r\n                                    >\r\n                                        Modifier\r\n                                    </Button>\r\n                                </Popover>\r\n                                <Popover\r\n                                    placement='right'\r\n                                    title='Supprimer une question'\r\n                                    width='400'\r\n                                    trigger='click'\r\n                                    content={\r\n                                        <Supprimer_question question={data} />\r\n                                    }\r\n                                >\r\n                                    <Button type='danger' size='small'>\r\n                                        Supprimer\r\n                                    </Button>\r\n                                </Popover>\r\n                            </span>\r\n                        );\r\n                    },\r\n                },\r\n            ],\r\n            data: [],\r\n            rowClicked: [],\r\n            idRow: \"\",\r\n        };\r\n        this.getdata = props.getdata;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onload = function () {\r\n            if (!window.location.hash) {\r\n                window.location = window.location + \"#loaded\";\r\n                window.location.reload();\r\n            }\r\n        };\r\n        window.onload();\r\n        axios.get(\"http://localhost/innov_ecl/GetQuestion.php\").then((res) => {\r\n            this.setState({ data: res.data });\r\n        });\r\n    }\r\n    getdata() {\r\n        axios.get(\"http://localhost/innov_ecl/GetQuestion.php\").then((res) => {\r\n            this.setState({ data: res.data });\r\n        });\r\n    }\r\n    onRowClick(row) {\r\n        this.setState({ rowClicked: row }, function () {\r\n            console.log(this.state.rowClicked);\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <h2>Choisissez les questions de divergence</h2>\r\n\r\n                <div className='flex-center'>\r\n                    <div className='ContainerTable'>\r\n                        <Table\r\n                            style={{ width: \"100%\" }}\r\n                            columns={this.state.columns}\r\n                            data={this.state.data}\r\n                            border={true}\r\n                            emptyText='Pas de questions'\r\n                            onSelectChange={(selection) => {\r\n                                this.props.addQuestions(selection);\r\n                            }}\r\n                            onSelectAll={(selection) => {\r\n                                this.props.addQuestions(selection);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Popover\r\n                        placement='right'\r\n                        title='Ajouter une question'\r\n                        width='400'\r\n                        trigger='click'\r\n                        content={<Ajout_question />}\r\n                    >\r\n                        <Button\r\n                            className='createBtn'\r\n                            plain={true}\r\n                            type='danger'\r\n                        >\r\n                            Ajouter une question\r\n                        </Button>\r\n                    </Popover>\r\n                </div>\r\n                <div className='footer'>\r\n                    <Button.Group>\r\n                        <Button\r\n                            type='danger'\r\n                            plain={true}\r\n                            onClick={(e) => {\r\n                                if (this.props.selectedQuestions.length === 0) {\r\n                                    alert(\"Choisir au moins une question.\");\r\n                                    e.preventDefault();\r\n                                } else {\r\n                                    window.location.pathname = \"/Divergence\";\r\n                                }\r\n                            }}\r\n                        >\r\n                            Etape Suivante\r\n                            <i className='el-icon-arrow-right el-icon-right'></i>\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedQuestions: state.questions.selectedQuestions.questions,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addQuestions })(TableQuestions);\r\n"]},"metadata":{},"sourceType":"module"}