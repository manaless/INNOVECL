{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manal\\\\Pictures\\\\innovecl\\\\innovecl\\\\src\\\\Components\\\\Modifier_idee.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Input, Form } from \"element-react\";\nimport \"element-theme-default\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Modifier_idee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true,\n      form: {\n        id_question: this.props.idee.id_question,\n        id_idee: this.props.idee.id_idée,\n        enonce_idee: this.props.idee.enonce_idee,\n        tags: []\n      },\n      rules: {\n        enonce_idee: [{\n          required: true,\n          message: \"Ecrire l'idée'\",\n          trigger: \"blur\"\n        }, {\n          validator: (rule, value, callback) => {\n            if (value === \"\") {\n              callback(new Error(\"idée vide\"));\n            } else {\n              callback();\n            }\n          }\n        }]\n      }\n    };\n  }\n\n  sendData() {\n    const fd = new FormData();\n    const tags = this.state.form.tags.map(tag => {\n      return tag.value;\n    });\n    const ft = tags.join(\", \");\n    fd.append(\"id_idee\", this.state.form.id_idee);\n    fd.append(\"enonce_idee\", this.state.form.enonce_idee);\n    fd.append(\"id_seance\", this.props.seance.id_seance);\n    fd.append(\"tags\", ft);\n    axios.post(\"http://localhost/innov_ecl/UpdateIdee.php\", fd).then(res => {\n      console.log(res);\n      window.location.reload(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.refs.form.validate(valid => {\n      if (valid) {\n        alert(\"submit!\");\n        this.sendData();\n      } else {\n        console.log(\"error submit!!\");\n        return false;\n      }\n    });\n  }\n\n  handleReset(e) {\n    e.preventDefault();\n    window.location.reload(false);\n  }\n\n  onChange(key, value) {\n    this.setState({\n      form: Object.assign({}, this.state.form, {\n        [key]: value\n      })\n    });\n  }\n\n  componentDidMount() {\n    const arr = this.props.idee.tags.split(\", \");\n    let arr2 = [];\n    arr.forEach(elt => {\n      arr2.push({\n        key: this.state.form.tags.length + 1,\n        value: elt\n      });\n    });\n    this.setState({ ...this.state,\n      form: { ...this.state.form,\n        tags: arr2\n      }\n    });\n  }\n\n  removeTag(index, e) {\n    if (index !== -1) {\n      this.state.form.tags.splice(index, 1);\n      this.forceUpdate();\n    }\n\n    if (this.state.form.tags.length !== 3) {\n      this.setState({ ...this.state,\n        visible: true\n      });\n    }\n\n    e.preventDefault();\n  }\n\n  addTag(e) {\n    e.preventDefault();\n    this.state.form.tags.push({\n      key: this.state.form.tags.length,\n      value: \"\"\n    });\n\n    if (this.state.form.tags.length === 3) {\n      this.setState({ ...this.state,\n        visible: false\n      });\n    }\n\n    this.forceUpdate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      ref: \"form\",\n      model: this.state.form,\n      rules: this.state.rules,\n      labelWidth: \"100\",\n      className: \"demo-ruleForm\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Id\\xE9e\",\n        prop: \"enonce_idee\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: this.state.form.enonce_idee,\n          onChange: this.onChange.bind(this, \"enonce_idee\"),\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), this.state.form.tags.map((tag, index) => {\n        return /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: `Tag ${index + 1}`,\n          prop: `tags:${index}`,\n          style: {\n            textAlign: \"left\"\n          },\n          rules: {\n            type: \"object\",\n            required: true,\n            fields: {\n              value: {\n                required: true,\n                message: \"Ecrire le tag\",\n                trigger: \"blur\"\n              }\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            value: tag.value,\n            style: {\n              width: \"50%\",\n              marginRight: \"10px\"\n            },\n            onChange: e => {\n              let t = this.state.form.tags;\n              t[index].value = e;\n              this.setState({ ...this.state,\n                form: { ...this.state.form,\n                  tags: [...t]\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), index === 0 ? \"\" : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => {\n              this.removeTag(index, e);\n            },\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => this.addTag(e),\n        style: {\n          display: `${this.state.visible ? \"inline-block\" : \"none\"}`,\n          marginBottom: \"10px\"\n        },\n        children: \"Nouveau Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"danger\",\n          onClick: this.handleSubmit.bind(this),\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          plain: true,\n          type: \"danger\",\n          onClick: this.handleReset.bind(this),\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  seance: state.seance.seance\n});\n\nexport default connect(mapStateToProps)(Modifier_idee);","map":{"version":3,"sources":["C:/Users/manal/Pictures/innovecl/innovecl/src/Components/Modifier_idee.jsx"],"names":["React","Component","Button","Input","Form","axios","connect","Modifier_idee","constructor","props","state","visible","form","id_question","idee","id_idee","id_idée","enonce_idee","tags","rules","required","message","trigger","validator","rule","value","callback","Error","sendData","fd","FormData","map","tag","ft","join","append","seance","id_seance","post","then","res","console","log","window","location","reload","catch","error","handleSubmit","e","preventDefault","refs","validate","valid","alert","handleReset","onChange","key","setState","Object","assign","componentDidMount","arr","split","arr2","forEach","elt","push","length","removeTag","index","splice","forceUpdate","addTag","render","bind","textAlign","type","fields","width","marginRight","t","display","marginBottom","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Input, Form } from \"element-react\";\r\n\r\nimport \"element-theme-default\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Modifier_idee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: true,\r\n            form: {\r\n                id_question: this.props.idee.id_question,\r\n                id_idee: this.props.idee.id_idée,\r\n                enonce_idee: this.props.idee.enonce_idee,\r\n                tags: [],\r\n            },\r\n            rules: {\r\n                enonce_idee: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Ecrire l'idée'\",\r\n                        trigger: \"blur\",\r\n                    },\r\n                    {\r\n                        validator: (rule, value, callback) => {\r\n                            if (value === \"\") {\r\n                                callback(new Error(\"idée vide\"));\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        };\r\n    }\r\n\r\n    sendData() {\r\n        const fd = new FormData();\r\n        const tags = this.state.form.tags.map((tag) => {\r\n            return tag.value;\r\n        });\r\n        const ft = tags.join(\", \");\r\n        fd.append(\"id_idee\", this.state.form.id_idee);\r\n        fd.append(\"enonce_idee\", this.state.form.enonce_idee);\r\n        fd.append(\"id_seance\", this.props.seance.id_seance);\r\n        fd.append(\"tags\", ft);\r\n        axios\r\n            .post(\"http://localhost/innov_ecl/UpdateIdee.php\", fd)\r\n            .then((res) => {\r\n                console.log(res);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.refs.form.validate((valid) => {\r\n            if (valid) {\r\n                alert(\"submit!\");\r\n                this.sendData();\r\n            } else {\r\n                console.log(\"error submit!!\");\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleReset(e) {\r\n        e.preventDefault();\r\n        window.location.reload(false);\r\n    }\r\n\r\n    onChange(key, value) {\r\n        this.setState({\r\n            form: Object.assign({}, this.state.form, { [key]: value }),\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const arr = this.props.idee.tags.split(\", \");\r\n        let arr2 = [];\r\n        arr.forEach((elt) => {\r\n            arr2.push({ key: this.state.form.tags.length + 1, value: elt });\r\n        });\r\n        this.setState({\r\n            ...this.state,\r\n            form: { ...this.state.form, tags: arr2 },\r\n        });\r\n    }\r\n\r\n    removeTag(index, e) {\r\n        if (index !== -1) {\r\n            this.state.form.tags.splice(index, 1);\r\n            this.forceUpdate();\r\n        }\r\n\r\n        if (this.state.form.tags.length !== 3) {\r\n            this.setState({ ...this.state, visible: true });\r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    addTag(e) {\r\n        e.preventDefault();\r\n\r\n        this.state.form.tags.push({\r\n            key: this.state.form.tags.length,\r\n            value: \"\",\r\n        });\r\n\r\n        if (this.state.form.tags.length === 3) {\r\n            this.setState({ ...this.state, visible: false });\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form\r\n                ref='form'\r\n                model={this.state.form}\r\n                rules={this.state.rules}\r\n                labelWidth='100'\r\n                className='demo-ruleForm'\r\n            >\r\n                <Form.Item label='Idée' prop='enonce_idee'>\r\n                    <Input\r\n                        type='text'\r\n                        value={this.state.form.enonce_idee}\r\n                        onChange={this.onChange.bind(this, \"enonce_idee\")}\r\n                        autoComplete='off'\r\n                    />\r\n                </Form.Item>\r\n                {this.state.form.tags.map((tag, index) => {\r\n                    return (\r\n                        <Form.Item\r\n                            key={index}\r\n                            label={`Tag ${index + 1}`}\r\n                            prop={`tags:${index}`}\r\n                            style={{ textAlign: \"left\" }}\r\n                            rules={{\r\n                                type: \"object\",\r\n                                required: true,\r\n                                fields: {\r\n                                    value: {\r\n                                        required: true,\r\n                                        message: \"Ecrire le tag\",\r\n                                        trigger: \"blur\",\r\n                                    },\r\n                                },\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                value={tag.value}\r\n                                style={{\r\n                                    width: \"50%\",\r\n                                    marginRight: \"10px\",\r\n                                }}\r\n                                onChange={(e) => {\r\n                                    let t = this.state.form.tags;\r\n                                    t[index].value = e;\r\n                                    this.setState({\r\n                                        ...this.state,\r\n                                        form: {\r\n                                            ...this.state.form,\r\n                                            tags: [...t],\r\n                                        },\r\n                                    });\r\n                                }}\r\n                            ></Input>\r\n                            {index === 0 ? (\r\n                                \"\"\r\n                            ) : (\r\n                                <Button\r\n                                    onClick={(e) => {\r\n                                        this.removeTag(index, e);\r\n                                    }}\r\n                                >\r\n                                    Supprimer\r\n                                </Button>\r\n                            )}\r\n                        </Form.Item>\r\n                    );\r\n                })}\r\n                <Button\r\n                    onClick={(e) => this.addTag(e)}\r\n                    style={{\r\n                        display: `${\r\n                            this.state.visible ? \"inline-block\" : \"none\"\r\n                        }`,\r\n                        marginBottom: \"10px\",\r\n                    }}\r\n                >\r\n                    Nouveau Tag\r\n                </Button>\r\n                <Form.Item>\r\n                    <Button\r\n                        type='danger'\r\n                        onClick={this.handleSubmit.bind(this)}\r\n                    >\r\n                        Modifier\r\n                    </Button>\r\n                    <Button\r\n                        plain={true}\r\n                        type='danger'\r\n                        onClick={this.handleReset.bind(this)}\r\n                    >\r\n                        Fermer\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    seance: state.seance.seance,\r\n});\r\nexport default connect(mapStateToProps)(Modifier_idee);\r\n"]},"metadata":{},"sourceType":"module"}