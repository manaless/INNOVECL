{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manal\\\\Pictures\\\\innovecl\\\\innovecl\\\\src\\\\Components\\\\Etiquettes.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Input, Link, Table, Popover, Tag, Form, Radio } from 'element-react';\nimport { i18n } from 'element-react';\nimport locale from 'element-react/src/locale/lang/en';\nimport 'element-theme-default';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(locale);\nexport class Etiquettes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dynamicTags: [],\n      inputVisible: false,\n      inputValue: '',\n      type: 'danger'\n    };\n  }\n\n  onKeyUp(e) {\n    if (e.keyCode === 13) {\n      this.handleInputConfirm();\n    }\n  }\n\n  onChange(value) {\n    this.setState({\n      inputValue: value\n    });\n  }\n\n  handleClose(index) {\n    this.state.dynamicTags.splice(index, 1);\n    this.forceUpdate();\n  }\n\n  showInput() {\n    this.setState({\n      inputVisible: true\n    }, () => {\n      this.refs.saveTagInput.focus();\n    });\n  }\n\n  handleInputConfirm() {\n    let inputValue = this.state.inputValue;\n\n    if (inputValue) {\n      this.state.dynamicTags.push(inputValue);\n    }\n\n    this.state.inputVisible = false;\n    this.state.inputValue = '';\n    this.forceUpdate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.dynamicTags.map((tag, index) => {\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          closable: true,\n          closeTransition: false,\n          onClose: this.handleClose.bind(this, index),\n          children: tag\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      }), this.state.inputVisible ? /*#__PURE__*/_jsxDEV(Input, {\n        className: \"input-new-tag\",\n        value: this.state.inputValue,\n        ref: \"saveTagInput\",\n        size: \"mini\",\n        onChange: this.onChange.bind(this),\n        onKeyUp: this.onKeyUp.bind(this),\n        onBlur: this.handleInputConfirm.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button-new-tag\",\n        size: \"small\",\n        onClick: this.showInput.bind(this),\n        children: \"+ New Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default Etiquettes;","map":{"version":3,"sources":["C:/Users/manal/Pictures/innovecl/innovecl/src/Components/Etiquettes.jsx"],"names":["React","Component","ReactDOM","Button","Input","Link","Table","Popover","Tag","Form","Radio","i18n","locale","use","Etiquettes","constructor","props","state","dynamicTags","inputVisible","inputValue","type","onKeyUp","e","keyCode","handleInputConfirm","onChange","value","setState","handleClose","index","splice","forceUpdate","showInput","refs","saveTagInput","focus","push","render","map","tag","bind","Math","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button,Input,Link,Table,Popover,Tag,Form,Radio} from 'element-react';\r\nimport { i18n } from 'element-react'\r\nimport locale from 'element-react/src/locale/lang/en'\r\n\r\nimport 'element-theme-default';\r\n\r\ni18n.use(locale);\r\nexport class Etiquettes extends Component {\r\n  \r\n\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n        this.state = {\r\n          dynamicTags: [],\r\n          inputVisible: false,\r\n          inputValue: '',\r\n          type: 'danger'\r\n        }\r\n      }\r\n      \r\n      onKeyUp(e) {\r\n        if (e.keyCode === 13) {\r\n          this.handleInputConfirm();\r\n        }\r\n      }\r\n      \r\n      onChange(value) {\r\n        this.setState({ inputValue: value });\r\n      }\r\n      \r\n      handleClose(index) {\r\n        this.state.dynamicTags.splice(index, 1);\r\n        this.forceUpdate();\r\n      }\r\n      \r\n      showInput() {\r\n        this.setState({ inputVisible: true }, () => {\r\n          this.refs.saveTagInput.focus();\r\n        });\r\n      }\r\n      \r\n      handleInputConfirm() {\r\n        let inputValue = this.state.inputValue;\r\n      \r\n        if (inputValue) {\r\n          this.state.dynamicTags.push(inputValue);\r\n        }\r\n      \r\n        this.state.inputVisible = false;\r\n        this.state.inputValue = '';\r\n      \r\n        this.forceUpdate();\r\n      }\r\n    render() {\r\n    return (\r\n        <div>\r\n      {\r\n        this.state.dynamicTags.map((tag, index) => {\r\n          return (\r\n            <Tag\r\n              key={Math.random()}\r\n              closable={true}\r\n              closeTransition={false}\r\n              onClose={this.handleClose.bind(this, index)}>{tag}</Tag>\r\n          )\r\n        })\r\n      }\r\n      {\r\n        this.state.inputVisible ? (\r\n          <Input\r\n            className=\"input-new-tag\"\r\n            value={this.state.inputValue}\r\n            ref=\"saveTagInput\"\r\n            size=\"mini\"\r\n            onChange={this.onChange.bind(this)}\r\n            onKeyUp={this.onKeyUp.bind(this)}\r\n            onBlur={this.handleInputConfirm.bind(this)}\r\n          />\r\n        ) : <Button className=\"button-new-tag\"  size=\"small\" onClick={this.showInput.bind(this)}>+ New Tag</Button>\r\n      }\r\n    </div>\r\n\r\n    );}\r\n  }\r\n  export default Etiquettes;"]},"metadata":{},"sourceType":"module"}