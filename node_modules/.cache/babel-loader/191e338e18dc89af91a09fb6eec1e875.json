{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { questionsReducer } from \"./reducers/questionsReducer\";\nimport { criteriaReducer } from \"./reducers/criteriaReducer\";\nimport { ideasReducer } from \"./reducers/ideasReducer\";\nimport { notesReducer } from \"./reducers/notesReducer\";\nimport { seanceReducer } from \"./reducers/seanceReducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { stepSReducer } from \"./reducers/stepsReducer\";\nconst reducer = combineReducers({\n  questions: questionsReducer,\n  criteria: criteriaReducer,\n  ideas: ideasReducer,\n  notes: notesReducer,\n  seance: seanceReducer,\n  steps: stepSReducer\n});\n/* const middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n); */\n\nconst persistConfig = {\n  key: \"reducer\",\n  storage: storage\n};\nconst presistedReducer = persistReducer(persistConfig, reducer);\nconst store = createStore(presistedReducer, composeWithDevTools(applyMiddleware(thunk)));\nconst persistor = persistStore(store);\nexport { persistor, store };","map":{"version":3,"sources":["C:/Users/manal/Pictures/innovecl/innovecl/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","questionsReducer","criteriaReducer","ideasReducer","notesReducer","seanceReducer","storage","persistStore","persistReducer","stepSReducer","reducer","questions","criteria","ideas","notes","seance","steps","persistConfig","key","presistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,MAAMC,OAAO,GAAGb,eAAe,CAAC;AAC5Bc,EAAAA,SAAS,EAAEV,gBADiB;AAE5BW,EAAAA,QAAQ,EAAEV,eAFkB;AAG5BW,EAAAA,KAAK,EAAEV,YAHqB;AAI5BW,EAAAA,KAAK,EAAEV,YAJqB;AAK5BW,EAAAA,MAAM,EAAEV,aALoB;AAM5BW,EAAAA,KAAK,EAAEP;AANqB,CAAD,CAA/B;AASA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMQ,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,SADa;AAElBZ,EAAAA,OAAO,EAAEA;AAFS,CAAtB;AAIA,MAAMa,gBAAgB,GAAGX,cAAc,CAACS,aAAD,EAAgBP,OAAhB,CAAvC;AACA,MAAMU,KAAK,GAAGxB,WAAW,CACrBuB,gBADqB,EAErBnB,mBAAmB,CAACF,eAAe,CAACC,KAAD,CAAhB,CAFE,CAAzB;AAIA,MAAMsB,SAAS,GAAGd,YAAY,CAACa,KAAD,CAA9B;AACA,SAASC,SAAT,EAAoBD,KAApB","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { questionsReducer } from \"./reducers/questionsReducer\";\r\nimport { criteriaReducer } from \"./reducers/criteriaReducer\";\r\nimport { ideasReducer } from \"./reducers/ideasReducer\";\r\nimport { notesReducer } from \"./reducers/notesReducer\";\r\nimport { seanceReducer } from \"./reducers/seanceReducer\";\r\n\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { stepSReducer } from \"./reducers/stepsReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    questions: questionsReducer,\r\n    criteria: criteriaReducer,\r\n    ideas: ideasReducer,\r\n    notes: notesReducer,\r\n    seance: seanceReducer,\r\n    steps: stepSReducer,\r\n});\r\n\r\n/* const middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n); */\r\n\r\nconst persistConfig = {\r\n    key: \"reducer\",\r\n    storage: storage,\r\n};\r\nconst presistedReducer = persistReducer(persistConfig, reducer);\r\nconst store = createStore(\r\n    presistedReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nconst persistor = persistStore(store);\r\nexport { persistor, store };\r\n"]},"metadata":{},"sourceType":"module"}